CPSC 351- Section 2
Spring 2014


Group Members:
	David McLaren
		896-36-5749
		sirusblk@gmail.com
	Taner Scott 
		893-93-8845
		tanerscott@yahoo.com
	Maira Ahmad
		899-30-5239
		maira_ahmad@csu.fullerton.edu


Purpose: Use shared memory, and message queues in order to implement an application which 	
		 synchronously transfers files between two processes.


Programming Language Used: 
		 C++

Extra Credit:
		 Not Implemented

File Names: 
	p2-[userid].tar
		sender.cpp
			CPP File that sends the message from the text file to the recieve model
		recv.cpp
			CPP File that recieves the message from the sender.cpp 
		keyfile.txt
			Text File that holds a "string" type of message
		msg.h
			Header File that holds a struct of the message relayed through message queues
		Makefile
			Makefile to build both the sender and reciever files

To run our program:
	compile: make
	execute: ./sender <FILE NAME>
		 ./recv



Sources: Yun Tian, Skeleton Code posted on Titanium
		 Message Queues: http://beej.us/guide/bgipc/output/html/multipage/mq.html
		 Shared Memory: http://beej.us/guide/bgipc/output/html/multipage/shm.html


